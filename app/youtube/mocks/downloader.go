// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mocks

import (
	"context"
	"sync"
)

// DownloaderServiceMock is a mock implementation of youtube.DownloaderService.
//
// 	func TestSomethingThatUsesDownloaderService(t *testing.T) {
//
// 		// make and configure a mocked youtube.DownloaderService
// 		mockedDownloaderService := &DownloaderServiceMock{
// 			GetFunc: func(ctx context.Context, id string, fname string) (string, error) {
// 				panic("mock out the Get method")
// 			},
// 		}
//
// 		// use mockedDownloaderService in code that requires youtube.DownloaderService
// 		// and then make assertions.
//
// 	}
type DownloaderServiceMock struct {
	// GetFunc mocks the Get method.
	GetFunc func(ctx context.Context, id string, fname string) (string, error)

	// calls tracks calls to the methods.
	calls struct {
		// Get holds details about calls to the Get method.
		Get []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// ID is the id argument value.
			ID string
			// Fname is the fname argument value.
			Fname string
		}
	}
	lockGet sync.RWMutex
}

// Get calls GetFunc.
func (mock *DownloaderServiceMock) Get(ctx context.Context, id string, fname string) (string, error) {
	if mock.GetFunc == nil {
		panic("DownloaderServiceMock.GetFunc: method is nil but DownloaderService.Get was just called")
	}
	callInfo := struct {
		Ctx   context.Context
		ID    string
		Fname string
	}{
		Ctx:   ctx,
		ID:    id,
		Fname: fname,
	}
	mock.lockGet.Lock()
	mock.calls.Get = append(mock.calls.Get, callInfo)
	mock.lockGet.Unlock()
	return mock.GetFunc(ctx, id, fname)
}

// GetCalls gets all the calls that were made to Get.
// Check the length with:
//     len(mockedDownloaderService.GetCalls())
func (mock *DownloaderServiceMock) GetCalls() []struct {
	Ctx   context.Context
	ID    string
	Fname string
} {
	var calls []struct {
		Ctx   context.Context
		ID    string
		Fname string
	}
	mock.lockGet.RLock()
	calls = mock.calls.Get
	mock.lockGet.RUnlock()
	return calls
}
